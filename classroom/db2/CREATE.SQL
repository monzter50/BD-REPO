CREATE SCHEMA SCHOOL;
	
SET SCHEMA = SCHOOL;
------------------------

CREATE TABLE SCHOOL.USER (
	id_user INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_user), 
	first_name VARCHAR(30), 
	last_name VARCHAR(30), 
	email VARCHAR(200) NOT NULL UNIQUE,
    date_joined DATE NOT NULL WITH DEFAULT CURRENT DATE
);

CREATE TABLE SCHOOL.TEACHER (
	id_teacher INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_teacher),
	id_user INT NOT NULL, 
	FOREIGN KEY (id_user)
     REFERENCES SCHOOL.USER (id_user) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.STUDENT (
	id_student INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_student),
	id_user INT NOT NULL, 
	FOREIGN KEY (id_user)
     REFERENCES SCHOOL.USER (id_user) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.CLASSROOM (
	id_class INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_class),
	name_class VARCHAR(100),
    created DATE NOT NULL WITH DEFAULT CURRENT DATE
);

CREATE TABLE SCHOOL.CLASS_STUDENT (
	id_class_student INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_class_student),
    id_student INT NOT NULL,
	id_class INT NOT NULL,
    FOREIGN KEY (id_class)
     REFERENCES SCHOOL.CLASSROOM (id_class) ON DELETE CASCADE,
     FOREIGN KEY (id_student)
     REFERENCES SCHOOL.STUDENT (id_student) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.CLASS_TEACHER (
	id_class_teacher INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_class_teacher),
	id_teacher INT NOT NULL UNIQUE, 
	id_class INT NOT NULL,
    FOREIGN KEY (id_class)
     REFERENCES SCHOOL.CLASSROOM (id_class) ON DELETE CASCADE,
     FOREIGN KEY (id_teacher)
     REFERENCES SCHOOL.TEACHER (id_teacher) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.SECTIONS (
	id_sections INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_sections),
	id_class INT NOT NULL, 
	name_sections VARCHAR(100),
    start_date DATE,
    end_date DATE,
     FOREIGN KEY (id_class)
     REFERENCES SCHOOL.CLASSROOM (id_class) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.ACTIVITY (
	id_activity INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_activity), 
	id_sections INT NOT NULL, 
	name_activity VARCHAR(100),
    start_date DATE,
    end_date DATE,
     FOREIGN KEY (id_sections)
     REFERENCES SCHOOL.SECTIONS(id_sections) ON DELETE CASCADE
);


CREATE TABLE SCHOOL.EXAMS (
	id_exams INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_exams), 
	id_activity INT NOT NULL UNIQUE, 
	name_exam VARCHAR(100),
     FOREIGN KEY (id_activity)
     REFERENCES SCHOOL.ACTIVITY (id_activity) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.QUESTIONS (
	id_questions INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_questions), 
	id_exams INT NOT NULL, 
	points INT DEFAULT 0,
    descriptions VARCHAR(100),
     FOREIGN KEY (id_exams)
     REFERENCES SCHOOL.EXAMS (id_exams) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.ANSWERS (
	id_answers INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_answers), 
	id_questions INT NOT NULL, 
	is_correct CHAR(1) DEFAULT 'N',
    descriptions VARCHAR(100),
     FOREIGN KEY (id_questions)
     REFERENCES SCHOOL.QUESTIONS (id_questions) ON DELETE CASCADE
);

CREATE TABLE SCHOOL.ASSIGMENT (
	id_assigment INT NOT NULL GENERATED ALWAYS AS IDENTITY(START WITH 1, INCREMENT BY 1 ), 
    PRIMARY KEY (id_assigment), 
	id_activity INT NOT NULL UNIQUE, 
	descriptions VARCHAR(100),
     FOREIGN KEY (id_activity)
     REFERENCES SCHOOL.ACTIVITY (id_activity) ON DELETE CASCADE
);